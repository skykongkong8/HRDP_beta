-- run_test.py: invoking following command in '/home/r1mini/sungsik_ws/src/hrdp_human_interfaces':
 - /opt/ros/foxy/bin/ament_flake8 --xunit-file /home/r1mini/sungsik_ws/build/hrdp_human_interfaces/test_results/hrdp_human_interfaces/flake8.xunit.xml


./src/sample_interface/home.py:6:1: F403 'from application_managers.constant_variables import *' used; unable to detect undefined names
from application_managers.constant_variables import*
^

./src/sample_interface/home.py:17:1: E302 expected 2 blank lines, found 1
def language_inquiry(flag)->int:
^

./src/sample_interface/home.py:17:27: E225 missing whitespace around operator
def language_inquiry(flag)->int:
                          ^

./src/sample_interface/home.py:20:84: F405 'ENGLISH' may be undefined, or defined from star imports: application_managers.constant_variables
        universal_talk('Hello, please tell me what language are you speaking in.', ENGLISH)
                                                                                   ^

./src/sample_interface/home.py:23:47: F405 'ENGLISH' may be undefined, or defined from star imports: application_managers.constant_variables
        Eng = split_string(language_selection[ENGLISH])
                                              ^

./src/sample_interface/home.py:24:47: F405 'KOREAN' may be undefined, or defined from star imports: application_managers.constant_variables
        Kor = split_string(language_selection[KOREAN])
                                              ^

./src/sample_interface/home.py:25:47: F405 'ESPANOL' may be undefined, or defined from star imports: application_managers.constant_variables
        Esp = split_string(language_selection[ESPANOL])
                                              ^

./src/sample_interface/home.py:26:5: E722 do not use bare 'except'
    except:
    ^

./src/sample_interface/home.py:27:100: E501 line too long (179 > 99 characters)
        universal_talk('Sorry, there were some error during the process. In this case, language is automatically selected to default. Current default language is Korean', ENGLISH)
                                                                                                   ^

./src/sample_interface/home.py:27:172: F405 'ENGLISH' may be undefined, or defined from star imports: application_managers.constant_variables
        universal_talk('Sorry, there were some error during the process. In this case, language is automatically selected to default. Current default language is Korean', ENGLISH)
                                                                                                                                                                           ^

./src/sample_interface/home.py:28:16: F405 'DEFAULT_LANGUAGE' may be undefined, or defined from star imports: application_managers.constant_variables
        return DEFAULT_LANGUAGE
               ^

./src/sample_interface/home.py:30:92: F405 'ENGLISH' may be undefined, or defined from star imports: application_managers.constant_variables
        universal_talk('You chose English. Welcome. Please press s key to make me alert.', ENGLISH)
                                                                                           ^

./src/sample_interface/home.py:31:16: F405 'ENGLISH' may be undefined, or defined from star imports: application_managers.constant_variables
        return ENGLISH
               ^

./src/sample_interface/home.py:32:100: E501 line too long (144 > 99 characters)
    elif check_item(Kor, '한국어') or check_item(Kor, '한국') or check_item(Eng, 'korea') or check_item(Eng, 'korean') or check_item(Esp, 'coreano'):
                                                                                                   ^

./src/sample_interface/home.py:33:134: F405 'KOREAN' may be undefined, or defined from star imports: application_managers.constant_variables
        universal_talk('한국어를 선택하셨습니다. 만나서 반갑습니다. 에스 키를 누르면 활성화됩니다.', KOREAN)
                                                                                                                                     ^

./src/sample_interface/home.py:34:16: F405 'KOREAN' may be undefined, or defined from star imports: application_managers.constant_variables
        return KOREAN
               ^

./src/sample_interface/home.py:36:71: F405 'ESPANOL' may be undefined, or defined from star imports: application_managers.constant_variables
        universal_talk('Usted he seleccionado español. Bienvenido!', ESPANOL)
                                                                      ^

./src/sample_interface/home.py:37:16: F405 'ESPANOL' may be undefined, or defined from star imports: application_managers.constant_variables
        return ESPANOL
               ^

./src/sample_interface/home.py:39:100: E501 line too long (161 > 99 characters)
        universal_talk('Sorry, I could not understand what you said. We only support English, Korean, and Spanish. Please tell me your language again.', ENGLISH)
                                                                                                   ^

./src/sample_interface/home.py:39:154: F405 'ENGLISH' may be undefined, or defined from star imports: application_managers.constant_variables
        universal_talk('Sorry, I could not understand what you said. We only support English, Korean, and Spanish. Please tell me your language again.', ENGLISH)
                                                                                                                                                         ^

./src/sample_interface/home.py:43:33: E225 missing whitespace around operator
def language_selection(argument)->int:
                                ^

./src/sample_interface/home.py:47:20: F405 'KOREAN' may be undefined, or defined from star imports: application_managers.constant_variables
            return KOREAN
                   ^

./src/sample_interface/home.py:49:20: F405 'ENGLISH' may be undefined, or defined from star imports: application_managers.constant_variables
            return ENGLISH
                   ^

./src/sample_interface/home.py:51:20: F405 'ESPANOL' may be undefined, or defined from star imports: application_managers.constant_variables
            return ESPANOL
                   ^

./src/sample_interface/home.py:54:20: F405 'DEFAULT_LANGUAGE' may be undefined, or defined from star imports: application_managers.constant_variables
            return DEFAULT_LANGUAGE
                   ^

./src/sample_interface/home.py:57:16: F405 'DEFAULT_LANGUAGE' may be undefined, or defined from star imports: application_managers.constant_variables
        return DEFAULT_LANGUAGE
               ^

./src/sample_interface/home.py:61:1: E305 expected 2 blank lines after class or function definition, found 1
"""Actual Home"""
^

./src/sample_interface/home.py:81:13: F405 'gc' may be undefined, or defined from star imports: application_managers.constant_variables
            gc.collect(generation=2)
            ^

./src/sample_interface/home.py:84:13: E722 do not use bare 'except'
            except:
            ^

./src/sample_interface/home.py:91:13: W292 no newline at end of file
        pass            ^

./src/sample_interface/application_managers/action.py:1:1: F403 'from constant_variables import *' used; unable to detect undefined names
from constant_variables import*
^

./src/sample_interface/application_managers/action.py:8:1: E302 expected 2 blank lines, found 1
class Action():
^

./src/sample_interface/application_managers/action.py:13:1: W293 blank line contains whitespace
 
^

./src/sample_interface/application_managers/action.py:15:27: F405 'UNKNOWN_ERROR' may be undefined, or defined from star imports: constant_variables
        if mode_number == UNKNOWN_ERROR:
                          ^

./src/sample_interface/application_managers/action.py:16:100: E501 line too long (118 > 99 characters)
            universal_talk('Sorry, I could not understand what you said. I will try harder next time.', self.language)
                                                                                                   ^

./src/sample_interface/application_managers/action.py:17:29: F405 'GREETING' may be undefined, or defined from star imports: constant_variables
        elif mode_number == GREETING:
                            ^

./src/sample_interface/application_managers/action.py:21:31: F405 'CLOCK' may be undefined, or defined from star imports: constant_variables
            if mode_number == CLOCK:
                              ^

./src/sample_interface/application_managers/action.py:23:33: F405 'TIMER' may be undefined, or defined from star imports: constant_variables
            elif mode_number == TIMER:
                                ^

./src/sample_interface/application_managers/action.py:25:33: F405 'JOKE' may be undefined, or defined from star imports: constant_variables
            elif mode_number == JOKE:
                                ^

./src/sample_interface/application_managers/action.py:27:1: W293 blank line contains whitespace
            
^

./src/sample_interface/application_managers/action.py:28:33: F405 'HOUSE_PARTY_PROTOCOL' may be undefined, or defined from star imports: constant_variables
            elif mode_number == HOUSE_PARTY_PROTOCOL:
                                ^

./src/sample_interface/application_managers/action.py:31:78: E231 missing whitespace after ','
                universal_talk('Sorry, requested service is not readied yet.',self.language)
                                                                             ^

./src/sample_interface/application_managers/action.py:32:1: W293 blank line contains whitespace
        
^

./src/sample_interface/application_managers/action.py:34:27: F405 'UNKNOWN_ERROR' may be undefined, or defined from star imports: constant_variables
        if mode_number == UNKNOWN_ERROR:
                          ^

./src/sample_interface/application_managers/action.py:36:29: F405 'GREETING' may be undefined, or defined from star imports: constant_variables
        elif mode_number == GREETING:
                            ^

./src/sample_interface/application_managers/action.py:40:31: F405 'CLOCK' may be undefined, or defined from star imports: constant_variables
            if mode_number == CLOCK:
                              ^

./src/sample_interface/application_managers/action.py:42:33: F405 'TIMER' may be undefined, or defined from star imports: constant_variables
            elif mode_number == TIMER:
                                ^

./src/sample_interface/application_managers/action.py:44:33: F405 'JOKE' may be undefined, or defined from star imports: constant_variables
            elif mode_number == JOKE:
                                ^

./src/sample_interface/application_managers/action.py:46:1: W293 blank line contains whitespace
            
^

./src/sample_interface/application_managers/action.py:47:33: F405 'HOUSE_PARTY_PROTOCOL' may be undefined, or defined from star imports: constant_variables
            elif mode_number == HOUSE_PARTY_PROTOCOL:
                                ^

./src/sample_interface/application_managers/action.py:53:27: F405 'UNKNOWN_ERROR' may be undefined, or defined from star imports: constant_variables
        if mode_number == UNKNOWN_ERROR:
                          ^

./src/sample_interface/application_managers/action.py:54:100: E501 line too long (153 > 99 characters)
            universal_talk('Lo siento, no entendí bien lo que estabas diciendo. Haremos todo lo posible para ayudarle en la próxima vez.', self.language)
                                                                                                   ^

./src/sample_interface/application_managers/action.py:55:29: F405 'GREETING' may be undefined, or defined from star imports: constant_variables
        elif mode_number == GREETING:
                            ^

./src/sample_interface/application_managers/action.py:73:1: E303 too many blank lines (3)
class EngAction(Action):
^

./src/sample_interface/application_managers/action.py:81:14: E203 whitespace before ':'
            1 : 'January',
             ^

./src/sample_interface/application_managers/action.py:82:14: E203 whitespace before ':'
            2 : 'Feburary',
             ^

./src/sample_interface/application_managers/action.py:83:14: E203 whitespace before ':'
            3 : 'March',
             ^

./src/sample_interface/application_managers/action.py:84:14: E203 whitespace before ':'
            4 : 'April',
             ^

./src/sample_interface/application_managers/action.py:85:14: E203 whitespace before ':'
            5 : 'May',
             ^

./src/sample_interface/application_managers/action.py:86:14: E203 whitespace before ':'
            6 : 'June',
             ^

./src/sample_interface/application_managers/action.py:87:14: E203 whitespace before ':'
            7 : 'July',
             ^

./src/sample_interface/application_managers/action.py:88:14: E203 whitespace before ':'
            8 : 'August',
             ^

./src/sample_interface/application_managers/action.py:89:14: E203 whitespace before ':'
            9 : 'September',
             ^

./src/sample_interface/application_managers/action.py:90:15: E203 whitespace before ':'
            10 : 'October',
              ^

./src/sample_interface/application_managers/action.py:91:15: E203 whitespace before ':'
            11 : 'November',
              ^

./src/sample_interface/application_managers/action.py:92:15: E203 whitespace before ':'
            12 : 'December'
              ^

./src/sample_interface/application_managers/action.py:95:14: E203 whitespace before ':'
            1 : 'first',
             ^

./src/sample_interface/application_managers/action.py:96:14: E203 whitespace before ':'
            2 : 'second',
             ^

./src/sample_interface/application_managers/action.py:97:14: E203 whitespace before ':'
            3 : 'third',
             ^

./src/sample_interface/application_managers/action.py:98:14: E203 whitespace before ':'
            4 : 'fourth',
             ^

./src/sample_interface/application_managers/action.py:99:14: E203 whitespace before ':'
            5 : 'fifth',
             ^

./src/sample_interface/application_managers/action.py:100:14: E203 whitespace before ':'
            6 : 'sixth',
             ^

./src/sample_interface/application_managers/action.py:101:14: E203 whitespace before ':'
            7 : 'seventh'
             ^

./src/sample_interface/application_managers/action.py:104:100: E501 line too long (144 > 99 characters)
            universal_talk('Today is {0} {1} {2} {3}'.format(time_list[0], month_dict[time_list[1]], time_list[2], time_list[3]), self.language)
                                                                                                   ^

./src/sample_interface/application_managers/action.py:106:100: E501 line too long (154 > 99 characters)
            universal_talk('Today is {0} {1} {2} {3}'.format(time_list[0], month_dict[time_list[1]], day_dict[time_list[2]], time_list[3]), self.language)
                                                                                                   ^

./src/sample_interface/application_managers/action.py:109:5: E303 too many blank lines (2)
    def _notification_ENG(self):
    ^

./src/sample_interface/application_managers/action.py:116:33: E225 missing whitespace around operator
            if (timer_seconds >=0):
                                ^

./src/sample_interface/application_managers/action.py:117:100: E501 line too long (126 > 99 characters)
                universal_talk('your timer has just set. I will let you know for three times when it is done!', self.language)
                                                                                                   ^

./src/sample_interface/application_managers/action.py:122:100: E501 line too long (117 > 99 characters)
                universal_talk('Sorry, I could not understand your timer order. Please try it again.', self.language)
                                                                                                   ^

./src/sample_interface/application_managers/action.py:123:9: E722 do not use bare 'except'
        except:
        ^

./src/sample_interface/application_managers/action.py:124:100: E501 line too long (113 > 99 characters)
            universal_talk('Sorry, I could not understand your timer order. Please try it again.', self.language)
                                                                                                   ^

./src/sample_interface/application_managers/action.py:125:1: W293 blank line contains whitespace
    
^

./src/sample_interface/application_managers/action.py:142:5: E303 too many blank lines (2)
    def house_party_protocol_ENG(self):
    ^

./src/sample_interface/application_managers/action.py:143:100: E501 line too long (141 > 99 characters)
        universal_talk('Activate house party protocol! Let me show you some of my representative functions at the same time.', self.language)
                                                                                                   ^

./src/sample_interface/application_managers/action.py:149:1: W293 blank line contains whitespace
        
^

./src/sample_interface/application_managers/action.py:152:1: E303 too many blank lines (3)
class KorAction(Action):
^

./src/sample_interface/application_managers/action.py:156:1: W293 blank line contains whitespace
    
^

./src/sample_interface/application_managers/action.py:159:100: E501 line too long (132 > 99 characters)
        universal_talk('지금은 {0}월 {1}일 {2}시 {3}분 입니다.'.format(time_list[0], time_list[1], time_list[2], time_list[3]), self.language)
                                                                                                   ^

./src/sample_interface/application_managers/action.py:160:1: W293 blank line contains whitespace
    
^

./src/sample_interface/application_managers/action.py:168:32: E225 missing whitespace around operator
            if (timer_seconds >0):
                               ^

./src/sample_interface/application_managers/action.py:175:9: E722 do not use bare 'except'
        except:
        ^

./src/sample_interface/application_managers/action.py:177:1: W293 blank line contains whitespace
    
^

./src/sample_interface/application_managers/action.py:180:47: E231 missing whitespace after ','
        joke_list = [['경찰관에는 어떤 혈액형이 가장 많을까요?','정답은 비형~ 비형~'],
                                              ^

./src/sample_interface/application_managers/action.py:181:13: E128 continuation line under-indented for visual indent
            ['차 열쇠의 색깔은?', '정답은 카 키 색'],
            ^

./src/sample_interface/application_managers/action.py:182:37: E231 missing whitespace after ','
            ['신하가 왕에게 공을 던지며 하는 말은?','정답은 송구하옵니다.. 전하..'],
                                    ^

./src/sample_interface/application_managers/action.py:183:32: E231 missing whitespace after ','
            ['자동차를 톡하고 치면 뭘까요?','정답은 카 톡 '],
                               ^

./src/sample_interface/application_managers/action.py:193:5: E303 too many blank lines (2)
    def house_party_protocol_KOR(self):
    ^

./src/sample_interface/application_managers/action.py:201:9: W292 no newline at end of file
    pass        ^

./src/sample_interface/application_managers/utils.py:4:1: F401 'gc' imported but unused
import gc
^

./src/sample_interface/application_managers/utils.py:10:5: F401 'termios' imported but unused
    import termios
    ^

./src/sample_interface/application_managers/utils.py:12:1: E302 expected 2 blank lines, found 1
def getKey():
^

./src/sample_interface/application_managers/utils.py:29:1: E302 expected 2 blank lines, found 1
def check_internet_connection()->bool:
^

./src/sample_interface/application_managers/utils.py:29:32: E225 missing whitespace around operator
def check_internet_connection()->bool:
                               ^

./src/sample_interface/application_managers/utils.py:36:20: W292 no newline at end of file
        return True                   ^

./src/sample_interface/application_managers/constant_variables.py:2:21: E261 at least two spaces before inline comment
DEFAULT_LANGUAGE = 1 # Current default language is Korean.
                    ^

./src/sample_interface/application_managers/constant_variables.py:14:27: W292 no newline at end of file
HOUSE_PARTY_PROTOCOL = 999                          ^

./src/sample_interface/application_managers/mode.py:1:100: E501 line too long (112 > 99 characters)
################################################################################################################
                                                                                                   ^

./src/sample_interface/application_managers/mode.py:3:92: W291 trailing whitespace
# Originally, mode selection should be done by NLP, analyzing the given sentence by syntax. 
                                                                                           ^

./src/sample_interface/application_managers/mode.py:4:100: E501 line too long (112 > 99 characters)
# However in this case, since the system is simple enough, we just use classification function like following...
                                                                                                   ^

./src/sample_interface/application_managers/mode.py:8:1: E303 too many blank lines (3)
from constant_variables import*
^

./src/sample_interface/application_managers/mode.py:8:1: F403 'from constant_variables import *' used; unable to detect undefined names
from constant_variables import*
^

./src/sample_interface/application_managers/mode.py:12:1: E303 too many blank lines (3)
def check_item(my_list, word):
^

./src/sample_interface/application_managers/mode.py:20:1: E302 expected 2 blank lines, found 1
def split_string(string):
^

./src/sample_interface/application_managers/mode.py:24:1: E302 expected 2 blank lines, found 1
def mode_selection_eng(string):    
^

./src/sample_interface/application_managers/mode.py:24:32: W291 trailing whitespace
def mode_selection_eng(string):    
                               ^

./src/sample_interface/application_managers/mode.py:27:100: E501 line too long (161 > 99 characters)
    if check_item(my_list, 'hello') or check_item(my_list, 'hi') or (check_item(my_list, 'meet') and check_item(my_list, 'nice') and check_item(my_list, 'you')):
                                                                                                   ^

./src/sample_interface/application_managers/mode.py:28:16: F405 'GREETING' may be undefined, or defined from star imports: constant_variables
        return GREETING
               ^

./src/sample_interface/application_managers/mode.py:30:16: F405 'COVID' may be undefined, or defined from star imports: constant_variables
        return COVID
               ^

./src/sample_interface/application_managers/mode.py:31:100: E501 line too long (140 > 99 characters)
    elif check_item(my_list, 'brightness') or (check_item(my_list, 'light') and (check_item(my_list, 'down') or check_item(my_list, 'up'))):
                                                                                                   ^

./src/sample_interface/application_managers/mode.py:32:16: F405 'BRIGHTNESS' may be undefined, or defined from star imports: constant_variables
        return BRIGHTNESS
               ^

./src/sample_interface/application_managers/mode.py:34:16: F405 'VOLUME' may be undefined, or defined from star imports: constant_variables
        return VOLUME
               ^

./src/sample_interface/application_managers/mode.py:35:100: E501 line too long (103 > 99 characters)
    elif (check_item(my_list, 'time') and check_item(my_list, 'what')) or check_item(my_list, 'clock'):
                                                                                                   ^

./src/sample_interface/application_managers/mode.py:36:16: F405 'CLOCK' may be undefined, or defined from star imports: constant_variables
        return CLOCK
               ^

./src/sample_interface/application_managers/mode.py:38:16: F405 'TIMER' may be undefined, or defined from star imports: constant_variables
        return TIMER
               ^

./src/sample_interface/application_managers/mode.py:39:100: E501 line too long (172 > 99 characters)
    elif check_item(my_list, 'joke') or check_item(my_list, 'jokes') or (check_item(my_list, 'funny') and (check_item(my_list, 'story') or check_item(my_list, 'stories'))):
                                                                                                   ^

./src/sample_interface/application_managers/mode.py:40:16: F405 'JOKE' may be undefined, or defined from star imports: constant_variables
        return JOKE
               ^

./src/sample_interface/application_managers/mode.py:41:100: E501 line too long (138 > 99 characters)
    elif check_item(my_list, 'protocol') and (check_item(my_list, 'house') or check_item(my_list, 'party'), check_item(my_list, 'final')):
                                                                                                   ^

./src/sample_interface/application_managers/mode.py:42:16: F405 'HOUSE_PARTY_PROTOCOL' may be undefined, or defined from star imports: constant_variables
        return HOUSE_PARTY_PROTOCOL
               ^

./src/sample_interface/application_managers/mode.py:45:16: F405 'UNKNOWN_ERROR' may be undefined, or defined from star imports: constant_variables
        return UNKNOWN_ERROR
               ^

./src/sample_interface/application_managers/mode.py:47:1: E302 expected 2 blank lines, found 1
def mode_selection_kor(string):
^

./src/sample_interface/application_managers/mode.py:51:16: F405 'GREETING' may be undefined, or defined from star imports: constant_variables
        return GREETING
               ^

./src/sample_interface/application_managers/mode.py:53:16: F405 'COVID' may be undefined, or defined from star imports: constant_variables
        return COVID
               ^

./src/sample_interface/application_managers/mode.py:54:100: E501 line too long (129 > 99 characters)
    elif check_item(my_list, '밝기') or (check_item(my_list, '화면이') and (check_item(my_list, '밝아') or check_item(my_list, '어두워'))):
                                                                                                   ^

./src/sample_interface/application_managers/mode.py:55:16: F405 'BRIGHTNESS' may be undefined, or defined from star imports: constant_variables
        return BRIGHTNESS
               ^

./src/sample_interface/application_managers/mode.py:57:16: F405 'VOLUME' may be undefined, or defined from star imports: constant_variables
        return VOLUME
               ^

./src/sample_interface/application_managers/mode.py:58:100: E501 line too long (123 > 99 characters)
    elif check_item(my_list, '시간') or (check_item(my_list, '몇') and check_item(my_list, '시')) or check_item(my_list, '시계'):
                                                                                                   ^

./src/sample_interface/application_managers/mode.py:59:16: F405 'CLOCK' may be undefined, or defined from star imports: constant_variables
        return CLOCK
               ^

./src/sample_interface/application_managers/mode.py:61:16: F405 'TIMER' may be undefined, or defined from star imports: constant_variables
        return TIMER
               ^

./src/sample_interface/application_managers/mode.py:62:100: E501 line too long (162 > 99 characters)
    elif check_item(my_list, '농담') or ((check_item(my_list, '재미있는') or check_item(my_list, '재밌는')) and (check_item(my_list, '이야기') or check_item(my_list, '얘기'))):
                                                                                                   ^

./src/sample_interface/application_managers/mode.py:63:16: F405 'JOKE' may be undefined, or defined from star imports: constant_variables
        return JOKE
               ^

./src/sample_interface/application_managers/mode.py:64:100: E501 line too long (216 > 99 characters)
    elif (check_item(my_list, '전부') or check_item(my_list, '다') or (check_item(my_list, '할') and check_item(my_list, '수') and check_item(my_list, '있는지'))) and (check_item(my_list, '보여') and check_item(my_list, '줘')):
                                                                                                   ^

./src/sample_interface/application_managers/mode.py:65:16: F405 'HOUSE_PARTY_PROTOCOL' may be undefined, or defined from star imports: constant_variables
        return HOUSE_PARTY_PROTOCOL
               ^

./src/sample_interface/application_managers/mode.py:67:16: F405 'UNKNOWN_ERROR' may be undefined, or defined from star imports: constant_variables
        return UNKNOWN_ERROR
               ^

./src/sample_interface/application_managers/mode.py:69:1: E302 expected 2 blank lines, found 1
def mode_selection_esp(string):
^

./src/sample_interface/application_managers/mode.py:74:16: F405 'GREETING' may be undefined, or defined from star imports: constant_variables
        return GREETING
               ^

./src/sample_interface/application_managers/mode.py:75:100: E501 line too long (103 > 99 characters)
    elif check_item(my_list, 'corona') or check_item(my_list, 'virus') or check_item(my_list, 'covid'):
                                                                                                   ^

./src/sample_interface/application_managers/mode.py:76:16: F405 'COVID' may be undefined, or defined from star imports: constant_variables
        return COVID
               ^

./src/sample_interface/application_managers/mode.py:78:16: F405 'UNKNOWN_ERROR' may be undefined, or defined from star imports: constant_variables
        return UNKNOWN_ERROR
               ^

./src/sample_interface/application_managers/mode.py:80:1: E302 expected 2 blank lines, found 1
def universal_mode_selection(string, language):
^

./src/sample_interface/application_managers/mode.py:89:20: F405 'ENGLISH' may be undefined, or defined from star imports: constant_variables
    if language == ENGLISH:
                   ^

./src/sample_interface/application_managers/mode.py:91:22: F405 'KOREAN' may be undefined, or defined from star imports: constant_variables
    elif language == KOREAN:
                     ^

./src/sample_interface/application_managers/mode.py:93:22: F405 'ESPANOL' may be undefined, or defined from star imports: constant_variables
    elif language == ESPANOL:
                     ^

./src/sample_interface/application_managers/mode.py:94:42: W292 no newline at end of file
        return mode_selection_esp(string)                                         ^

./src/sample_interface/organs/check_microphone_connection.py:5:18: E261 at least two spaces before inline comment
DEVICE_INDEX = 11 # FIX HERE!
                 ^

./src/sample_interface/organs/check_microphone_connection.py:9:32: E251 unexpected spaces around keyword / parameter equals
with sr.Microphone(device_index = DEVICE_INDEX) as source:
                               ^

./src/sample_interface/organs/check_microphone_connection.py:9:34: E251 unexpected spaces around keyword / parameter equals
with sr.Microphone(device_index = DEVICE_INDEX) as source:
                                 ^

./src/sample_interface/organs/check_microphone_connection.py:15:35: E231 missing whitespace after ','
with open("microphone_results.wav","wb") as f:
                                  ^

./src/sample_interface/organs/ears.py:6:1: E302 expected 2 blank lines, found 1
class Ears():
^

./src/sample_interface/organs/ears.py:7:21: E225 missing whitespace around operator
    def listen(self)->list:
                    ^

./src/sample_interface/organs/ears.py:14:28: E261 at least two spaces before inline comment
        r = sr.Recognizer() # device_index = 3 for Jetson Nano
                           ^

./src/sample_interface/organs/ears.py:15:40: E251 unexpected spaces around keyword / parameter equals
        with sr.Microphone(device_index = DEVICE_INDEX) as source:
                                       ^

./src/sample_interface/organs/ears.py:15:42: E251 unexpected spaces around keyword / parameter equals
        with sr.Microphone(device_index = DEVICE_INDEX) as source:
                                         ^

./src/sample_interface/organs/ears.py:16:17: E117 over-indented (comment)
                # r.adjust_for_ambient_noise(source, duration =1)
                ^

./src/sample_interface/organs/ears.py:17:17: E117 over-indented
                print("Say something!")
                ^

./src/sample_interface/organs/ears.py:20:52: W291 trailing whitespace
                audio = r.listen(source, timeout=3) 
                                                   ^

./src/sample_interface/organs/ears.py:24:67: E251 unexpected spaces around keyword / parameter equals
        eng = r.recognize_google(audio, language="en-US", show_all = True)
                                                                  ^

./src/sample_interface/organs/ears.py:24:69: E251 unexpected spaces around keyword / parameter equals
        eng = r.recognize_google(audio, language="en-US", show_all = True)
                                                                    ^

./src/sample_interface/organs/ears.py:25:49: E251 unexpected spaces around keyword / parameter equals
        kor = r.recognize_google(audio, language = 'ko-KR', show_all = True)
                                                ^

./src/sample_interface/organs/ears.py:25:51: E251 unexpected spaces around keyword / parameter equals
        kor = r.recognize_google(audio, language = 'ko-KR', show_all = True)
                                                  ^

./src/sample_interface/organs/ears.py:25:69: E251 unexpected spaces around keyword / parameter equals
        kor = r.recognize_google(audio, language = 'ko-KR', show_all = True)
                                                                    ^

./src/sample_interface/organs/ears.py:25:71: E251 unexpected spaces around keyword / parameter equals
        kor = r.recognize_google(audio, language = 'ko-KR', show_all = True)
                                                                      ^

./src/sample_interface/organs/ears.py:26:49: E251 unexpected spaces around keyword / parameter equals
        esp = r.recognize_google(audio, language = 'es-ES', show_all = True)
                                                ^

./src/sample_interface/organs/ears.py:26:51: E251 unexpected spaces around keyword / parameter equals
        esp = r.recognize_google(audio, language = 'es-ES', show_all = True)
                                                  ^

./src/sample_interface/organs/ears.py:26:69: E251 unexpected spaces around keyword / parameter equals
        esp = r.recognize_google(audio, language = 'es-ES', show_all = True)
                                                                    ^

./src/sample_interface/organs/ears.py:26:71: E251 unexpected spaces around keyword / parameter equals
        esp = r.recognize_google(audio, language = 'es-ES', show_all = True)
                                                                      ^

./src/sample_interface/organs/ears.py:32:100: E501 line too long (103 > 99 characters)
        #     print("Google Speech Recognition thinks you said " + eng + '\n or ' + kor +'\n or '+ esp)
                                                                                                   ^

./src/sample_interface/organs/ears.py:37:100: E501 line too long (102 > 99 characters)
        #     print("Could not request results from Google Speech Recognition service; {0}".format(e))
                                                                                                   ^

./src/sample_interface/organs/ears.py:45:1: E305 expected 2 blank lines after class or function definition, found 1
if __name__ == "__main__":
^

./src/sample_interface/organs/ears.py:52:1: E303 too many blank lines (3)
#Notes for listen() and its internal fns - DETAILED REGULATION OPTIONS - Sungsik Kong
^

./src/sample_interface/organs/ears.py:52:1: E265 block comment should start with '# '
#Notes for listen() and its internal fns - DETAILED REGULATION OPTIONS - Sungsik Kong
^

./src/sample_interface/organs/ears.py:54:1: E265 block comment should start with '# '
#1 listen function changes 'source' into 'AudioData' instance. 'AudioData' can be 'recognized' by google data deisgnated languages
^

./src/sample_interface/organs/ears.py:54:100: E501 line too long (130 > 99 characters)
#1 listen function changes 'source' into 'AudioData' instance. 'AudioData' can be 'recognized' by google data deisgnated languages
                                                                                                   ^

./src/sample_interface/organs/ears.py:55:1: E265 block comment should start with '# '
#2 'timeout' param is maximum waiting time(seconds) before 'speech_recognition.WaitTimeoutError'
^

./src/sample_interface/organs/ears.py:56:1: E265 block comment should start with '# '
#3 'phrase_time_limit' param is maximum seconds that letting phrase to continue before stopping and returning the part of the phrase
^

./src/sample_interface/organs/ears.py:56:100: E501 line too long (132 > 99 characters)
#3 'phrase_time_limit' param is maximum seconds that letting phrase to continue before stopping and returning the part of the phrase
                                                                                                   ^

./src/sample_interface/organs/ears.py:57:1: E265 block comment should start with '# '
#4 starts when energy above 'recognizer_instance.energy_threshold' and completed after 'timeout + phrase_timeout' seconds, and this returns one of the followings: audio data / waittimeError
^

./src/sample_interface/organs/ears.py:57:100: E501 line too long (189 > 99 characters)
#4 starts when energy above 'recognizer_instance.energy_threshold' and completed after 'timeout + phrase_timeout' seconds, and this returns one of the followings: audio data / waittimeError
                                                                                                   ^

./src/sample_interface/organs/ears.py:58:1: E265 block comment should start with '# '
#5 such params are predetermined at the original __init__ function^

./src/sample_interface/organs/ears.py:58:67: W292 no newline at end of file
#5 such params are predetermined at the original __init__ function                                                                  ^

./src/sample_interface/organs/ears.py:58:67: W292 no newline at end of file
#5 such params are predetermined at the original __init__ function                                                                  ^

./src/sample_interface/organs/ears.py:58:67: W292 no newline at end of file
#5 such params are predetermined at the original __init__ function                                                                  ^

./src/sample_interface/organs/mouth.py:7:1: W293 blank line contains whitespace
        
^

./src/sample_interface/organs/mouth.py:9:9: E117 over-indented
        tts = gTTS(text = words, lang = 'en')
        ^

./src/sample_interface/organs/mouth.py:9:24: E251 unexpected spaces around keyword / parameter equals
        tts = gTTS(text = words, lang = 'en')
                       ^

./src/sample_interface/organs/mouth.py:9:26: E251 unexpected spaces around keyword / parameter equals
        tts = gTTS(text = words, lang = 'en')
                         ^

./src/sample_interface/organs/mouth.py:9:38: E251 unexpected spaces around keyword / parameter equals
        tts = gTTS(text = words, lang = 'en')
                                     ^

./src/sample_interface/organs/mouth.py:9:40: E251 unexpected spaces around keyword / parameter equals
        tts = gTTS(text = words, lang = 'en')
                                       ^

./src/sample_interface/organs/mouth.py:16:9: E117 over-indented
        tts = gTTS(text = words, lang = 'ko')
        ^

./src/sample_interface/organs/mouth.py:16:24: E251 unexpected spaces around keyword / parameter equals
        tts = gTTS(text = words, lang = 'ko')
                       ^

./src/sample_interface/organs/mouth.py:16:26: E251 unexpected spaces around keyword / parameter equals
        tts = gTTS(text = words, lang = 'ko')
                         ^

./src/sample_interface/organs/mouth.py:16:38: E251 unexpected spaces around keyword / parameter equals
        tts = gTTS(text = words, lang = 'ko')
                                     ^

./src/sample_interface/organs/mouth.py:16:40: E251 unexpected spaces around keyword / parameter equals
        tts = gTTS(text = words, lang = 'ko')
                                       ^

./src/sample_interface/organs/mouth.py:23:9: E117 over-indented
        tts = gTTS(text = words, lang = 'es')
        ^

./src/sample_interface/organs/mouth.py:23:24: E251 unexpected spaces around keyword / parameter equals
        tts = gTTS(text = words, lang = 'es')
                       ^

./src/sample_interface/organs/mouth.py:23:26: E251 unexpected spaces around keyword / parameter equals
        tts = gTTS(text = words, lang = 'es')
                         ^

./src/sample_interface/organs/mouth.py:23:38: E251 unexpected spaces around keyword / parameter equals
        tts = gTTS(text = words, lang = 'es')
                                     ^

./src/sample_interface/organs/mouth.py:23:40: E251 unexpected spaces around keyword / parameter equals
        tts = gTTS(text = words, lang = 'es')
                                       ^

./src/sample_interface/organs/mouth.py:26:34: W291 trailing whitespace
        os.remove('sample_1.mp3') 
                                 ^

./src/sample_interface/organs/mouth.py:28:1: E302 expected 2 blank lines, found 1
def universal_talk(string, language):
^

./src/sample_interface/organs/mouth.py:41:1: E305 expected 2 blank lines after class or function definition, found 1
if __name__ =="__main__":
^

./src/sample_interface/organs/mouth.py:41:15: E225 missing whitespace around operator
if __name__ =="__main__":
              ^

./src/sample_interface/organs/mouth.py:50:2: W291 trailing whitespace
# 
 ^

./src/sample_interface/organs/mouth.py:56:43: W292 no newline at end of file
#         mixer.music.play('sample_1.mp3')                                          ^

./src/sample_interface/organs/mouth.py:56:43: W292 no newline at end of file
#         mixer.music.play('sample_1.mp3')                                          ^

./src/sample_interface/organs/mouth.py:56:43: W292 no newline at end of file
#         mixer.music.play('sample_1.mp3')                                          ^

./src/sample_interface/application/clock.py:1:1: F401 'time' imported but unused
import time
^

./src/sample_interface/application/clock.py:3:1: F401 'schedule' imported but unused
import schedule
^

./src/sample_interface/application/clock.py:5:1: E302 expected 2 blank lines, found 1
def clock() -> list:
^

./src/sample_interface/application/clock.py:12:38: W292 no newline at end of file
    return [year, month, day, minute]                                     ^

./src/sample_interface/application/timer.py:1:1: F403 'from constant_variables import *' used; unable to detect undefined names
from constant_variables import*
^

./src/sample_interface/application/timer.py:4:1: E302 expected 2 blank lines, found 1
def universal_timertime(master, language):
^

./src/sample_interface/application/timer.py:5:20: F405 'ENGLISH' may be undefined, or defined from star imports: constant_variables
    if language == ENGLISH:
                   ^

./src/sample_interface/application/timer.py:7:22: F405 'KOREAN' may be undefined, or defined from star imports: constant_variables
    elif language == KOREAN:
                     ^

./src/sample_interface/application/timer.py:9:22: F405 'ESPANOL' may be undefined, or defined from star imports: constant_variables
    elif language == ESPANOL:
                     ^

./src/sample_interface/application/timer.py:12:1: E302 expected 2 blank lines, found 1
def timertime_KOR(master)->float:
^

./src/sample_interface/application/timer.py:12:26: E225 missing whitespace around operator
def timertime_KOR(master)->float:
                         ^

./src/sample_interface/application/timer.py:14:22: W605 invalid escape sequence '\d'
    p = re.compile('(\d)+')
                     ^

./src/sample_interface/application/timer.py:24:14: E225 missing whitespace around operator
            t*=60
             ^

./src/sample_interface/application/timer.py:26:14: E225 missing whitespace around operator
            t*=3600
             ^

./src/sample_interface/application/timer.py:29:5: E722 do not use bare 'except'
    except:
    ^

./src/sample_interface/application/timer.py:31:13: W291 trailing whitespace
    return t     
            ^

./src/sample_interface/application/timer.py:33:1: E302 expected 2 blank lines, found 1
def timertime_ENG(master)->float:
^

./src/sample_interface/application/timer.py:33:26: E225 missing whitespace around operator
def timertime_ENG(master)->float:
                         ^

./src/sample_interface/application/timer.py:35:22: W605 invalid escape sequence '\d'
    p = re.compile('(\d)+')
                     ^

./src/sample_interface/application/timer.py:45:14: E225 missing whitespace around operator
            t*=60
             ^

./src/sample_interface/application/timer.py:47:14: E225 missing whitespace around operator
            t*=3600
             ^

./src/sample_interface/application/timer.py:50:5: E722 do not use bare 'except'
    except:
    ^

./src/sample_interface/application/timer.py:52:13: W291 trailing whitespace
    return t     
            ^

./src/sample_interface/application/timer.py:54:1: E302 expected 2 blank lines, found 1
def timertime_ESP(master):
^

./src/sample_interface/application/timer.py:55:9: W292 no newline at end of file
    pass        ^

./src/sample_interface/application/joke.py:3:1: E302 expected 2 blank lines, found 1
def joke()->int:
^

./src/sample_interface/application/joke.py:3:11: E225 missing whitespace around operator
def joke()->int:
          ^

./src/sample_interface/application/joke.py:4:25: E231 missing whitespace after ','
    joke_num = randint(1,6)
                        ^

./src/sample_interface/application/joke.py:5:20: W292 no newline at end of file
    return joke_num                   ^

5     E117 over-indented (comment)
1     E128 continuation line under-indented for visual indent
19    E203 whitespace before ':'
14    E225 missing whitespace around operator
6     E231 missing whitespace after ','
26    E251 unexpected spaces around keyword / parameter equals
3     E261 at least two spaces before inline comment
6     E265 block comment should start with '# '
17    E302 expected 2 blank lines, found 1
8     E303 too many blank lines (3)
3     E305 expected 2 blank lines after class or function definition, found 1
29    E501 line too long (118 > 99 characters)
6     E722 do not use bare 'except'
4     F401 'time' imported but unused
4     F403 'from constant_variables import *' used; unable to detect undefined names
60    F405 'ENGLISH' may be undefined, or defined from star imports: constant_variables
7     W291 trailing whitespace
14    W292 no newline at end of file
10    W293 blank line contains whitespace
2     W605 invalid escape sequence '\d'

12 files checked
244 errors

'E'-type errors: 143
'F'-type errors: 68
'W'-type errors: 33

Checked files:

* ./src/sample_interface/home.py
* ./src/sample_interface/application_managers/action.py
* ./src/sample_interface/application_managers/utils.py
* ./src/sample_interface/application_managers/constant_variables.py
* ./src/sample_interface/application_managers/mode.py
* ./src/sample_interface/organs/check_microphone_connection.py
* ./src/sample_interface/organs/ears.py
* ./src/sample_interface/organs/__init__.py
* ./src/sample_interface/organs/mouth.py
* ./src/sample_interface/application/clock.py
* ./src/sample_interface/application/timer.py
* ./src/sample_interface/application/joke.py


-- run_test.py: return code 1
-- run_test.py: verify result file '/home/r1mini/sungsik_ws/build/hrdp_human_interfaces/test_results/hrdp_human_interfaces/flake8.xunit.xml'
